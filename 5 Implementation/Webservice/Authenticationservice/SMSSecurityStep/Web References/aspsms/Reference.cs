//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SMSSecurityStep.aspsms {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ASPSMSX2Soap", Namespace="https://webservice.aspsms.com/aspsmsx2.asmx")]
    public partial class ASPSMSX2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SimpleWAPPushOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSimpleTextSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTextSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendUnicodeSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCreditsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOriginatorUnlockCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockOriginatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOriginatorAuthorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTokenSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback InquireDeliveryNotificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RedeemVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoucherTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusCodeDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback VersionInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ASPSMSX2() {
            this.Url = global::SMSSecurityStep.Properties.Settings.Default.SMSSecurityStep_aspsms_ASPSMSX2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SimpleWAPPushCompletedEventHandler SimpleWAPPushCompleted;
        
        /// <remarks/>
        public event SendSimpleTextSMSCompletedEventHandler SendSimpleTextSMSCompleted;
        
        /// <remarks/>
        public event SendTextSMSCompletedEventHandler SendTextSMSCompleted;
        
        /// <remarks/>
        public event SendUnicodeSMSCompletedEventHandler SendUnicodeSMSCompleted;
        
        /// <remarks/>
        public event CheckCreditsCompletedEventHandler CheckCreditsCompleted;
        
        /// <remarks/>
        public event SendOriginatorUnlockCodeCompletedEventHandler SendOriginatorUnlockCodeCompleted;
        
        /// <remarks/>
        public event UnlockOriginatorCompletedEventHandler UnlockOriginatorCompleted;
        
        /// <remarks/>
        public event CheckOriginatorAuthorizationCompletedEventHandler CheckOriginatorAuthorizationCompleted;
        
        /// <remarks/>
        public event VerifyTokenCompletedEventHandler VerifyTokenCompleted;
        
        /// <remarks/>
        public event SendTokenSMSCompletedEventHandler SendTokenSMSCompleted;
        
        /// <remarks/>
        public event InquireDeliveryNotificationsCompletedEventHandler InquireDeliveryNotificationsCompleted;
        
        /// <remarks/>
        public event RedeemVoucherCompletedEventHandler RedeemVoucherCompleted;
        
        /// <remarks/>
        public event CreateVoucherCompletedEventHandler CreateVoucherCompleted;
        
        /// <remarks/>
        public event GetVoucherTransactionsCompletedEventHandler GetVoucherTransactionsCompleted;
        
        /// <remarks/>
        public event GetStatusCodeDescriptionCompletedEventHandler GetStatusCodeDescriptionCompleted;
        
        /// <remarks/>
        public event VersionInfoCompletedEventHandler VersionInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/SimpleWAPPush", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SimpleWAPPush(string UserKey, string Password, string Recipients, string Originator, string WapDescription, string WapURL, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId) {
            object[] results = this.Invoke("SimpleWAPPush", new object[] {
                        UserKey,
                        Password,
                        Recipients,
                        Originator,
                        WapDescription,
                        WapURL,
                        DeferredDeliveryTime,
                        FlashingSMS,
                        TimeZone,
                        URLBufferedMessageNotification,
                        URLDeliveryNotification,
                        URLNonDeliveryNotification,
                        AffiliateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleWAPPushAsync(string UserKey, string Password, string Recipients, string Originator, string WapDescription, string WapURL, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId) {
            this.SimpleWAPPushAsync(UserKey, Password, Recipients, Originator, WapDescription, WapURL, DeferredDeliveryTime, FlashingSMS, TimeZone, URLBufferedMessageNotification, URLDeliveryNotification, URLNonDeliveryNotification, AffiliateId, null);
        }
        
        /// <remarks/>
        public void SimpleWAPPushAsync(string UserKey, string Password, string Recipients, string Originator, string WapDescription, string WapURL, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId, object userState) {
            if ((this.SimpleWAPPushOperationCompleted == null)) {
                this.SimpleWAPPushOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleWAPPushOperationCompleted);
            }
            this.InvokeAsync("SimpleWAPPush", new object[] {
                        UserKey,
                        Password,
                        Recipients,
                        Originator,
                        WapDescription,
                        WapURL,
                        DeferredDeliveryTime,
                        FlashingSMS,
                        TimeZone,
                        URLBufferedMessageNotification,
                        URLDeliveryNotification,
                        URLNonDeliveryNotification,
                        AffiliateId}, this.SimpleWAPPushOperationCompleted, userState);
        }
        
        private void OnSimpleWAPPushOperationCompleted(object arg) {
            if ((this.SimpleWAPPushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleWAPPushCompleted(this, new SimpleWAPPushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/SendSimpleTextSMS", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSimpleTextSMS(string UserKey, string Password, string Recipients, string Originator, string MessageText) {
            object[] results = this.Invoke("SendSimpleTextSMS", new object[] {
                        UserKey,
                        Password,
                        Recipients,
                        Originator,
                        MessageText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSimpleTextSMSAsync(string UserKey, string Password, string Recipients, string Originator, string MessageText) {
            this.SendSimpleTextSMSAsync(UserKey, Password, Recipients, Originator, MessageText, null);
        }
        
        /// <remarks/>
        public void SendSimpleTextSMSAsync(string UserKey, string Password, string Recipients, string Originator, string MessageText, object userState) {
            if ((this.SendSimpleTextSMSOperationCompleted == null)) {
                this.SendSimpleTextSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSimpleTextSMSOperationCompleted);
            }
            this.InvokeAsync("SendSimpleTextSMS", new object[] {
                        UserKey,
                        Password,
                        Recipients,
                        Originator,
                        MessageText}, this.SendSimpleTextSMSOperationCompleted, userState);
        }
        
        private void OnSendSimpleTextSMSOperationCompleted(object arg) {
            if ((this.SendSimpleTextSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSimpleTextSMSCompleted(this, new SendSimpleTextSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/SendTextSMS", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendTextSMS(string UserKey, string Password, string Recipients, string Originator, string MessageText, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId) {
            object[] results = this.Invoke("SendTextSMS", new object[] {
                        UserKey,
                        Password,
                        Recipients,
                        Originator,
                        MessageText,
                        DeferredDeliveryTime,
                        FlashingSMS,
                        TimeZone,
                        URLBufferedMessageNotification,
                        URLDeliveryNotification,
                        URLNonDeliveryNotification,
                        AffiliateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTextSMSAsync(string UserKey, string Password, string Recipients, string Originator, string MessageText, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId) {
            this.SendTextSMSAsync(UserKey, Password, Recipients, Originator, MessageText, DeferredDeliveryTime, FlashingSMS, TimeZone, URLBufferedMessageNotification, URLDeliveryNotification, URLNonDeliveryNotification, AffiliateId, null);
        }
        
        /// <remarks/>
        public void SendTextSMSAsync(string UserKey, string Password, string Recipients, string Originator, string MessageText, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId, object userState) {
            if ((this.SendTextSMSOperationCompleted == null)) {
                this.SendTextSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTextSMSOperationCompleted);
            }
            this.InvokeAsync("SendTextSMS", new object[] {
                        UserKey,
                        Password,
                        Recipients,
                        Originator,
                        MessageText,
                        DeferredDeliveryTime,
                        FlashingSMS,
                        TimeZone,
                        URLBufferedMessageNotification,
                        URLDeliveryNotification,
                        URLNonDeliveryNotification,
                        AffiliateId}, this.SendTextSMSOperationCompleted, userState);
        }
        
        private void OnSendTextSMSOperationCompleted(object arg) {
            if ((this.SendTextSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTextSMSCompleted(this, new SendTextSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/SendUnicodeSMS", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendUnicodeSMS(string UserKey, string Password, string Recipients, string Originator, string MessageText, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId) {
            object[] results = this.Invoke("SendUnicodeSMS", new object[] {
                        UserKey,
                        Password,
                        Recipients,
                        Originator,
                        MessageText,
                        DeferredDeliveryTime,
                        FlashingSMS,
                        TimeZone,
                        URLBufferedMessageNotification,
                        URLDeliveryNotification,
                        URLNonDeliveryNotification,
                        AffiliateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendUnicodeSMSAsync(string UserKey, string Password, string Recipients, string Originator, string MessageText, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId) {
            this.SendUnicodeSMSAsync(UserKey, Password, Recipients, Originator, MessageText, DeferredDeliveryTime, FlashingSMS, TimeZone, URLBufferedMessageNotification, URLDeliveryNotification, URLNonDeliveryNotification, AffiliateId, null);
        }
        
        /// <remarks/>
        public void SendUnicodeSMSAsync(string UserKey, string Password, string Recipients, string Originator, string MessageText, string DeferredDeliveryTime, string FlashingSMS, string TimeZone, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId, object userState) {
            if ((this.SendUnicodeSMSOperationCompleted == null)) {
                this.SendUnicodeSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendUnicodeSMSOperationCompleted);
            }
            this.InvokeAsync("SendUnicodeSMS", new object[] {
                        UserKey,
                        Password,
                        Recipients,
                        Originator,
                        MessageText,
                        DeferredDeliveryTime,
                        FlashingSMS,
                        TimeZone,
                        URLBufferedMessageNotification,
                        URLDeliveryNotification,
                        URLNonDeliveryNotification,
                        AffiliateId}, this.SendUnicodeSMSOperationCompleted, userState);
        }
        
        private void OnSendUnicodeSMSOperationCompleted(object arg) {
            if ((this.SendUnicodeSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendUnicodeSMSCompleted(this, new SendUnicodeSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/CheckCredits", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckCredits(string UserKey, string Password) {
            object[] results = this.Invoke("CheckCredits", new object[] {
                        UserKey,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCreditsAsync(string UserKey, string Password) {
            this.CheckCreditsAsync(UserKey, Password, null);
        }
        
        /// <remarks/>
        public void CheckCreditsAsync(string UserKey, string Password, object userState) {
            if ((this.CheckCreditsOperationCompleted == null)) {
                this.CheckCreditsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCreditsOperationCompleted);
            }
            this.InvokeAsync("CheckCredits", new object[] {
                        UserKey,
                        Password}, this.CheckCreditsOperationCompleted, userState);
        }
        
        private void OnCheckCreditsOperationCompleted(object arg) {
            if ((this.CheckCreditsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCreditsCompleted(this, new CheckCreditsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/SendOriginatorUnlockCode", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendOriginatorUnlockCode(string UserKey, string Password, string Originator) {
            object[] results = this.Invoke("SendOriginatorUnlockCode", new object[] {
                        UserKey,
                        Password,
                        Originator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendOriginatorUnlockCodeAsync(string UserKey, string Password, string Originator) {
            this.SendOriginatorUnlockCodeAsync(UserKey, Password, Originator, null);
        }
        
        /// <remarks/>
        public void SendOriginatorUnlockCodeAsync(string UserKey, string Password, string Originator, object userState) {
            if ((this.SendOriginatorUnlockCodeOperationCompleted == null)) {
                this.SendOriginatorUnlockCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOriginatorUnlockCodeOperationCompleted);
            }
            this.InvokeAsync("SendOriginatorUnlockCode", new object[] {
                        UserKey,
                        Password,
                        Originator}, this.SendOriginatorUnlockCodeOperationCompleted, userState);
        }
        
        private void OnSendOriginatorUnlockCodeOperationCompleted(object arg) {
            if ((this.SendOriginatorUnlockCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOriginatorUnlockCodeCompleted(this, new SendOriginatorUnlockCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/UnlockOriginator", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnlockOriginator(string UserKey, string Password, string Originator, string OriginatorUnlockCode, string AffiliateId) {
            object[] results = this.Invoke("UnlockOriginator", new object[] {
                        UserKey,
                        Password,
                        Originator,
                        OriginatorUnlockCode,
                        AffiliateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockOriginatorAsync(string UserKey, string Password, string Originator, string OriginatorUnlockCode, string AffiliateId) {
            this.UnlockOriginatorAsync(UserKey, Password, Originator, OriginatorUnlockCode, AffiliateId, null);
        }
        
        /// <remarks/>
        public void UnlockOriginatorAsync(string UserKey, string Password, string Originator, string OriginatorUnlockCode, string AffiliateId, object userState) {
            if ((this.UnlockOriginatorOperationCompleted == null)) {
                this.UnlockOriginatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockOriginatorOperationCompleted);
            }
            this.InvokeAsync("UnlockOriginator", new object[] {
                        UserKey,
                        Password,
                        Originator,
                        OriginatorUnlockCode,
                        AffiliateId}, this.UnlockOriginatorOperationCompleted, userState);
        }
        
        private void OnUnlockOriginatorOperationCompleted(object arg) {
            if ((this.UnlockOriginatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockOriginatorCompleted(this, new UnlockOriginatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/CheckOriginatorAuthorization", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckOriginatorAuthorization(string UserKey, string Password, string Originator) {
            object[] results = this.Invoke("CheckOriginatorAuthorization", new object[] {
                        UserKey,
                        Password,
                        Originator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOriginatorAuthorizationAsync(string UserKey, string Password, string Originator) {
            this.CheckOriginatorAuthorizationAsync(UserKey, Password, Originator, null);
        }
        
        /// <remarks/>
        public void CheckOriginatorAuthorizationAsync(string UserKey, string Password, string Originator, object userState) {
            if ((this.CheckOriginatorAuthorizationOperationCompleted == null)) {
                this.CheckOriginatorAuthorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOriginatorAuthorizationOperationCompleted);
            }
            this.InvokeAsync("CheckOriginatorAuthorization", new object[] {
                        UserKey,
                        Password,
                        Originator}, this.CheckOriginatorAuthorizationOperationCompleted, userState);
        }
        
        private void OnCheckOriginatorAuthorizationOperationCompleted(object arg) {
            if ((this.CheckOriginatorAuthorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOriginatorAuthorizationCompleted(this, new CheckOriginatorAuthorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/VerifyToken", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerifyToken(string UserKey, string Password, string PhoneNumber, string TokenReference, string VerificationCode) {
            object[] results = this.Invoke("VerifyToken", new object[] {
                        UserKey,
                        Password,
                        PhoneNumber,
                        TokenReference,
                        VerificationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTokenAsync(string UserKey, string Password, string PhoneNumber, string TokenReference, string VerificationCode) {
            this.VerifyTokenAsync(UserKey, Password, PhoneNumber, TokenReference, VerificationCode, null);
        }
        
        /// <remarks/>
        public void VerifyTokenAsync(string UserKey, string Password, string PhoneNumber, string TokenReference, string VerificationCode, object userState) {
            if ((this.VerifyTokenOperationCompleted == null)) {
                this.VerifyTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTokenOperationCompleted);
            }
            this.InvokeAsync("VerifyToken", new object[] {
                        UserKey,
                        Password,
                        PhoneNumber,
                        TokenReference,
                        VerificationCode}, this.VerifyTokenOperationCompleted, userState);
        }
        
        private void OnVerifyTokenOperationCompleted(object arg) {
            if ((this.VerifyTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTokenCompleted(this, new VerifyTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/SendTokenSMS", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendTokenSMS(string UserKey, string Password, string Originator, string Recipients, string MessageData, string TokenReference, string TokenValidity, string TokenMask, string VerificationCode, string TokenCaseSensitive, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId) {
            object[] results = this.Invoke("SendTokenSMS", new object[] {
                        UserKey,
                        Password,
                        Originator,
                        Recipients,
                        MessageData,
                        TokenReference,
                        TokenValidity,
                        TokenMask,
                        VerificationCode,
                        TokenCaseSensitive,
                        URLBufferedMessageNotification,
                        URLDeliveryNotification,
                        URLNonDeliveryNotification,
                        AffiliateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTokenSMSAsync(string UserKey, string Password, string Originator, string Recipients, string MessageData, string TokenReference, string TokenValidity, string TokenMask, string VerificationCode, string TokenCaseSensitive, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId) {
            this.SendTokenSMSAsync(UserKey, Password, Originator, Recipients, MessageData, TokenReference, TokenValidity, TokenMask, VerificationCode, TokenCaseSensitive, URLBufferedMessageNotification, URLDeliveryNotification, URLNonDeliveryNotification, AffiliateId, null);
        }
        
        /// <remarks/>
        public void SendTokenSMSAsync(string UserKey, string Password, string Originator, string Recipients, string MessageData, string TokenReference, string TokenValidity, string TokenMask, string VerificationCode, string TokenCaseSensitive, string URLBufferedMessageNotification, string URLDeliveryNotification, string URLNonDeliveryNotification, string AffiliateId, object userState) {
            if ((this.SendTokenSMSOperationCompleted == null)) {
                this.SendTokenSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTokenSMSOperationCompleted);
            }
            this.InvokeAsync("SendTokenSMS", new object[] {
                        UserKey,
                        Password,
                        Originator,
                        Recipients,
                        MessageData,
                        TokenReference,
                        TokenValidity,
                        TokenMask,
                        VerificationCode,
                        TokenCaseSensitive,
                        URLBufferedMessageNotification,
                        URLDeliveryNotification,
                        URLNonDeliveryNotification,
                        AffiliateId}, this.SendTokenSMSOperationCompleted, userState);
        }
        
        private void OnSendTokenSMSOperationCompleted(object arg) {
            if ((this.SendTokenSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTokenSMSCompleted(this, new SendTokenSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/InquireDeliveryNotifications", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InquireDeliveryNotifications(string UserKey, string Password, string TransactionReferenceNumbers) {
            object[] results = this.Invoke("InquireDeliveryNotifications", new object[] {
                        UserKey,
                        Password,
                        TransactionReferenceNumbers});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InquireDeliveryNotificationsAsync(string UserKey, string Password, string TransactionReferenceNumbers) {
            this.InquireDeliveryNotificationsAsync(UserKey, Password, TransactionReferenceNumbers, null);
        }
        
        /// <remarks/>
        public void InquireDeliveryNotificationsAsync(string UserKey, string Password, string TransactionReferenceNumbers, object userState) {
            if ((this.InquireDeliveryNotificationsOperationCompleted == null)) {
                this.InquireDeliveryNotificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInquireDeliveryNotificationsOperationCompleted);
            }
            this.InvokeAsync("InquireDeliveryNotifications", new object[] {
                        UserKey,
                        Password,
                        TransactionReferenceNumbers}, this.InquireDeliveryNotificationsOperationCompleted, userState);
        }
        
        private void OnInquireDeliveryNotificationsOperationCompleted(object arg) {
            if ((this.InquireDeliveryNotificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InquireDeliveryNotificationsCompleted(this, new InquireDeliveryNotificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/RedeemVoucher", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RedeemVoucher(string UserKey, string Password, string RedeemCode) {
            object[] results = this.Invoke("RedeemVoucher", new object[] {
                        UserKey,
                        Password,
                        RedeemCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RedeemVoucherAsync(string UserKey, string Password, string RedeemCode) {
            this.RedeemVoucherAsync(UserKey, Password, RedeemCode, null);
        }
        
        /// <remarks/>
        public void RedeemVoucherAsync(string UserKey, string Password, string RedeemCode, object userState) {
            if ((this.RedeemVoucherOperationCompleted == null)) {
                this.RedeemVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRedeemVoucherOperationCompleted);
            }
            this.InvokeAsync("RedeemVoucher", new object[] {
                        UserKey,
                        Password,
                        RedeemCode}, this.RedeemVoucherOperationCompleted, userState);
        }
        
        private void OnRedeemVoucherOperationCompleted(object arg) {
            if ((this.RedeemVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RedeemVoucherCompleted(this, new RedeemVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/CreateVoucher", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateVoucher(string UserKey, string Password, string NumberOfVouchers, string AmountCreditsPerVoucher, string Remarks) {
            object[] results = this.Invoke("CreateVoucher", new object[] {
                        UserKey,
                        Password,
                        NumberOfVouchers,
                        AmountCreditsPerVoucher,
                        Remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVoucherAsync(string UserKey, string Password, string NumberOfVouchers, string AmountCreditsPerVoucher, string Remarks) {
            this.CreateVoucherAsync(UserKey, Password, NumberOfVouchers, AmountCreditsPerVoucher, Remarks, null);
        }
        
        /// <remarks/>
        public void CreateVoucherAsync(string UserKey, string Password, string NumberOfVouchers, string AmountCreditsPerVoucher, string Remarks, object userState) {
            if ((this.CreateVoucherOperationCompleted == null)) {
                this.CreateVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVoucherOperationCompleted);
            }
            this.InvokeAsync("CreateVoucher", new object[] {
                        UserKey,
                        Password,
                        NumberOfVouchers,
                        AmountCreditsPerVoucher,
                        Remarks}, this.CreateVoucherOperationCompleted, userState);
        }
        
        private void OnCreateVoucherOperationCompleted(object arg) {
            if ((this.CreateVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVoucherCompleted(this, new CreateVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/GetVoucherTransactions", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public vouchers[] GetVoucherTransactions(string UserKey, string Password) {
            object[] results = this.Invoke("GetVoucherTransactions", new object[] {
                        UserKey,
                        Password});
            return ((vouchers[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVoucherTransactionsAsync(string UserKey, string Password) {
            this.GetVoucherTransactionsAsync(UserKey, Password, null);
        }
        
        /// <remarks/>
        public void GetVoucherTransactionsAsync(string UserKey, string Password, object userState) {
            if ((this.GetVoucherTransactionsOperationCompleted == null)) {
                this.GetVoucherTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoucherTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetVoucherTransactions", new object[] {
                        UserKey,
                        Password}, this.GetVoucherTransactionsOperationCompleted, userState);
        }
        
        private void OnGetVoucherTransactionsOperationCompleted(object arg) {
            if ((this.GetVoucherTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoucherTransactionsCompleted(this, new GetVoucherTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/GetStatusCodeDescription", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStatusCodeDescription(string StatusCode) {
            object[] results = this.Invoke("GetStatusCodeDescription", new object[] {
                        StatusCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusCodeDescriptionAsync(string StatusCode) {
            this.GetStatusCodeDescriptionAsync(StatusCode, null);
        }
        
        /// <remarks/>
        public void GetStatusCodeDescriptionAsync(string StatusCode, object userState) {
            if ((this.GetStatusCodeDescriptionOperationCompleted == null)) {
                this.GetStatusCodeDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusCodeDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetStatusCodeDescription", new object[] {
                        StatusCode}, this.GetStatusCodeDescriptionOperationCompleted, userState);
        }
        
        private void OnGetStatusCodeDescriptionOperationCompleted(object arg) {
            if ((this.GetStatusCodeDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCodeDescriptionCompleted(this, new GetStatusCodeDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://webservice.aspsms.com/aspsmsx2.asmx/VersionInfo", RequestNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", ResponseNamespace="https://webservice.aspsms.com/aspsmsx2.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VersionInfo() {
            object[] results = this.Invoke("VersionInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionInfoAsync() {
            this.VersionInfoAsync(null);
        }
        
        /// <remarks/>
        public void VersionInfoAsync(object userState) {
            if ((this.VersionInfoOperationCompleted == null)) {
                this.VersionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionInfoOperationCompleted);
            }
            this.InvokeAsync("VersionInfo", new object[0], this.VersionInfoOperationCompleted, userState);
        }
        
        private void OnVersionInfoOperationCompleted(object arg) {
            if ((this.VersionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionInfoCompleted(this, new VersionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://webservice.aspsms.com/aspsmsx2.asmx")]
    public partial class vouchers {
        
        private string voucherCodeField;
        
        private string remarkField;
        
        private string creditsField;
        
        private string createdField;
        
        private string redeemedField;
        
        /// <remarks/>
        public string VoucherCode {
            get {
                return this.voucherCodeField;
            }
            set {
                this.voucherCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string Credits {
            get {
                return this.creditsField;
            }
            set {
                this.creditsField = value;
            }
        }
        
        /// <remarks/>
        public string Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string Redeemed {
            get {
                return this.redeemedField;
            }
            set {
                this.redeemedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SimpleWAPPushCompletedEventHandler(object sender, SimpleWAPPushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleWAPPushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleWAPPushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendSimpleTextSMSCompletedEventHandler(object sender, SendSimpleTextSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSimpleTextSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSimpleTextSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendTextSMSCompletedEventHandler(object sender, SendTextSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTextSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTextSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendUnicodeSMSCompletedEventHandler(object sender, SendUnicodeSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendUnicodeSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendUnicodeSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckCreditsCompletedEventHandler(object sender, CheckCreditsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCreditsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCreditsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendOriginatorUnlockCodeCompletedEventHandler(object sender, SendOriginatorUnlockCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOriginatorUnlockCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOriginatorUnlockCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UnlockOriginatorCompletedEventHandler(object sender, UnlockOriginatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockOriginatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockOriginatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckOriginatorAuthorizationCompletedEventHandler(object sender, CheckOriginatorAuthorizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOriginatorAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOriginatorAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void VerifyTokenCompletedEventHandler(object sender, VerifyTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendTokenSMSCompletedEventHandler(object sender, SendTokenSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTokenSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTokenSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InquireDeliveryNotificationsCompletedEventHandler(object sender, InquireDeliveryNotificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InquireDeliveryNotificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InquireDeliveryNotificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RedeemVoucherCompletedEventHandler(object sender, RedeemVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RedeemVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RedeemVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateVoucherCompletedEventHandler(object sender, CreateVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetVoucherTransactionsCompletedEventHandler(object sender, GetVoucherTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoucherTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoucherTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public vouchers[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((vouchers[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStatusCodeDescriptionCompletedEventHandler(object sender, GetStatusCodeDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCodeDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusCodeDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void VersionInfoCompletedEventHandler(object sender, VersionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591